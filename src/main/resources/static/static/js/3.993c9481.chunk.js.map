{"version":3,"sources":["../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js"],"names":["freeGlobal","__webpack_require__","freeSelf","self","Object","root","Function","module","exports","isArray","Array","baseIsNative","getValue","object","key","value","undefined","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l","i","Symbol","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","length","this","clear","entry","set","prototype","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","type","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","args","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","n","wh","bl","ratio","cmyk","c","m","lab","y2","a","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","arg","slice","call","arguments","pair","exec","from","to","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","helpers","noop","uid","id","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","apply","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","options","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","point","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","render","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","configurable","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Line","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","next","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","createElement","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","config","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","event","pos","fromNativeEvent","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","configMerge","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","process","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","_objectWithoutProperties","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","writable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","chartInstance","_this$props","onElementsClick","ref","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","getCurrentDatasets","_this2","_this3","currentDatasets","nextDatasets","currentDatasetsIndexed","pid","otherProps","rest","_props2","defaultProps","_props3","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","_React$Component2","Doughnut","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","CustomTooltips","tooltipModel","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","_idMaker","random","_canvasId","_setCanvasId","titleLines","tooltipHeader","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","_tooltipBodyItemValue","positionY","offsetTop","positionX","customTooltips"],"mappings":"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","file":"static/js/3.993c9481.chunk.js","sourcesContent":["var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : factory(global['custom-tooltips'] = {});\n})(this, function (exports) {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n\n  function CustomTooltips(tooltipModel) {\n    var _this = this; // Add unique id if not exist\n\n\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  var customTooltips = CustomTooltips; // TODO: camel-case\n\n  exports.CustomTooltips = CustomTooltips;\n  exports.customTooltips = customTooltips;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});"],"sourceRoot":""}