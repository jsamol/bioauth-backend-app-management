{"version":3,"sources":["../node_modules/webpack/buildin/module.js","../node_modules/keycloak-js/dist/keycloak.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","__WEBPACK_AMD_DEFINE_RESULT__","window","undefined","Keycloak","config","this","adapter","callbackStorage","kc","refreshQueue","loginIframe","enable","callbackList","interval","scripts","document","getElementsByTagName","length","src","indexOf","iframeVersion","substring","split","useNonce","getRealmUrl","authServerUrl","charAt","encodeURIComponent","realm","processCallback","oauth","promise","code","error","prompt","timeLocal","Date","getTime","errorData","error_description","onAuthError","setError","setSuccess","flow","access_token","id_token","authSuccess","params","url","endpoints","token","req","XMLHttpRequest","open","setRequestHeader","clientId","clientSecret","btoa","redirectUri","withCredentials","onreadystatechange","readyState","status","tokenResponse","JSON","parse","responseText","scheduleCheckIframe","send","accessToken","refreshToken","idToken","fulfillPromise","setToken","tokenParsed","nonce","storedNonce","refreshTokenParsed","idTokenParsed","console","info","clearToken","onAuthSuccess","fileLoaded","xhr","responseURL","startsWith","tokenTimeoutHandle","clearTimeout","decodeToken","sessionId","session_state","authenticated","subject","sub","realmAccess","realm_access","resourceAccess","resource_access","timeSkew","Math","floor","iat","onTokenExpired","expiresIn","round","setTimeout","str","replace","slice","decodeURIComponent","escape","atob","createUUID","s","substr","random","join","parseCallback","supportedParams","push","newUrl","parsed","queryIndex","fragmentIndex","responseMode","parseCallbackParams","paramsString","oauthParams","state","parseCallbackUrl","oauthState","valid","p","result","t","createPromise","internal","useNativePromise","resolve","reject","Promise","createNativePromise","success","successCallback","errorCallback","callback","createLegacyPromise","setupCheckLoginIframe","iframe","createElement","onload","authUrl","authorize","iframeOrigin","location","origin","protocol","hostname","port","checkSessionIframe","setAttribute","style","display","body","appendChild","addEventListener","event","contentWindow","source","data","callbacks","splice","checkLoginIframe","unchanged","msg","postMessage","loadAdapter","type","login","options","createLoginUrl","logout","createLogoutUrl","register","createRegisterUrl","accountManagement","accountUrl","createAccountUrl","href","encodeHash","arguments","cordovaOpenWindowWrapper","loginUrl","target","cordova","InAppBrowser","createCordovaOptions","userOptions","cordovaOptions","keys","reduce","optionName","shallowCloneCordovaOptions","hidden","formatCordovaOptions","ref","completed","closed","closeBrowser","close","reason","logoutUrl","registerUrl","universalLinks","subscribe","unsubscribe","plugins","browsertab","openUrl","init","initOptions","LocalStorage","err","CookieStorage","createCallbackStorage","Cordova","checkLoginIframeInterval","promiseType","onLoad","loginRequired","responseType","initPromise","onReady","configPromise","configUrl","setupOidcEndoints","oidcConfiguration","authorization_endpoint","token_endpoint","end_session_endpoint","check_session_iframe","userinfo","userinfo_endpoint","credentials","secret","oidcProvider","oidcProviderConfigUrl","oidcProviderConfig","match","loadConfig","doLogin","history","replaceState","e","updateToken","baseUrl","scope","callbackState","add","action","maxAge","loginHint","idpHint","locale","kcLocale","hasRealmRole","role","access","roles","hasResourceRole","resource","loadUserProfile","profile","loadUserInfo","userInfo","isTokenExpired","minValidity","ceil","exec","onAuthRefreshSuccess","pop","warn","onAuthRefreshError","onAuthLogout","callback_id","localStorage","setItem","removeItem","clearExpired","time","key","value","getItem","expires","stringify","getCookie","setCookie","cookieExpiration","minutes","exp","setTime","name","ca","cookie","c","expirationDate","toUTCString","apply"],"mappings":"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","file":"static/js/11.4eed688b.chunk.js","sourcesContent":["module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","/*\n * Copyright 2016 Red Hat, Inc. and/or its affiliates\n * and other contributors as indicated by the @author tags.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function (window, undefined) {\n  var Keycloak = function Keycloak(config) {\n    if (!(this instanceof Keycloak)) {\n      return new Keycloak(config);\n    }\n\n    var kc = this;\n    var adapter;\n    var refreshQueue = [];\n    var callbackStorage;\n    var loginIframe = {\n      enable: true,\n      callbackList: [],\n      interval: 5\n    };\n    var scripts = document.getElementsByTagName('script');\n\n    for (var i = 0; i < scripts.length; i++) {\n      if ((scripts[i].src.indexOf('keycloak.js') !== -1 || scripts[i].src.indexOf('keycloak.min.js') !== -1) && scripts[i].src.indexOf('version=') !== -1) {\n        kc.iframeVersion = scripts[i].src.substring(scripts[i].src.indexOf('version=') + 8).split('&')[0];\n      }\n    }\n\n    var useNonce = true;\n\n    kc.init = function (initOptions) {\n      kc.authenticated = false;\n      callbackStorage = createCallbackStorage();\n      var adapters = ['default', 'cordova', 'cordova-native'];\n\n      if (initOptions && adapters.indexOf(initOptions.adapter) > -1) {\n        adapter = loadAdapter(initOptions.adapter);\n      } else if (initOptions && typeof initOptions.adapter === \"object\") {\n        adapter = initOptions.adapter;\n      } else {\n        if (window.Cordova || window.cordova) {\n          adapter = loadAdapter('cordova');\n        } else {\n          adapter = loadAdapter();\n        }\n      }\n\n      if (initOptions) {\n        if (typeof initOptions.useNonce !== 'undefined') {\n          useNonce = initOptions.useNonce;\n        }\n\n        if (typeof initOptions.checkLoginIframe !== 'undefined') {\n          loginIframe.enable = initOptions.checkLoginIframe;\n        }\n\n        if (initOptions.checkLoginIframeInterval) {\n          loginIframe.interval = initOptions.checkLoginIframeInterval;\n        }\n\n        if (initOptions.promiseType === 'native') {\n          kc.useNativePromise = typeof Promise === \"function\";\n        } else {\n          kc.useNativePromise = false;\n        }\n\n        if (initOptions.onLoad === 'login-required') {\n          kc.loginRequired = true;\n        }\n\n        if (initOptions.responseMode) {\n          if (initOptions.responseMode === 'query' || initOptions.responseMode === 'fragment') {\n            kc.responseMode = initOptions.responseMode;\n          } else {\n            throw 'Invalid value for responseMode';\n          }\n        }\n\n        if (initOptions.flow) {\n          switch (initOptions.flow) {\n            case 'standard':\n              kc.responseType = 'code';\n              break;\n\n            case 'implicit':\n              kc.responseType = 'id_token token';\n              break;\n\n            case 'hybrid':\n              kc.responseType = 'code id_token token';\n              break;\n\n            default:\n              throw 'Invalid value for flow';\n          }\n\n          kc.flow = initOptions.flow;\n        }\n\n        if (initOptions.timeSkew != null) {\n          kc.timeSkew = initOptions.timeSkew;\n        }\n\n        if (initOptions.redirectUri) {\n          kc.redirectUri = initOptions.redirectUri;\n        }\n      }\n\n      if (!kc.responseMode) {\n        kc.responseMode = 'fragment';\n      }\n\n      if (!kc.responseType) {\n        kc.responseType = 'code';\n        kc.flow = 'standard';\n      }\n\n      var promise = createPromise(false);\n      var initPromise = createPromise(true);\n      initPromise.promise.success(function () {\n        kc.onReady && kc.onReady(kc.authenticated);\n        promise.setSuccess(kc.authenticated);\n      }).error(function (errorData) {\n        promise.setError(errorData);\n      });\n      var configPromise = loadConfig(config);\n\n      function onLoad() {\n        var doLogin = function doLogin(prompt) {\n          if (!prompt) {\n            options.prompt = 'none';\n          }\n\n          kc.login(options).success(function () {\n            initPromise.setSuccess();\n          }).error(function () {\n            initPromise.setError();\n          });\n        };\n\n        var options = {};\n\n        switch (initOptions.onLoad) {\n          case 'check-sso':\n            if (loginIframe.enable) {\n              setupCheckLoginIframe().success(function () {\n                checkLoginIframe().success(function (unchanged) {\n                  if (!unchanged) {\n                    doLogin(false);\n                  } else {\n                    initPromise.setSuccess();\n                  }\n                }).error(function () {\n                  initPromise.setError();\n                });\n              });\n            } else {\n              doLogin(false);\n            }\n\n            break;\n\n          case 'login-required':\n            doLogin(true);\n            break;\n\n          default:\n            throw 'Invalid value for onLoad';\n        }\n      }\n\n      function processInit() {\n        var callback = parseCallback(window.location.href);\n\n        if (callback) {\n          window.history.replaceState(window.history.state, null, callback.newUrl);\n        }\n\n        if (callback && callback.valid) {\n          return setupCheckLoginIframe().success(function () {\n            processCallback(callback, initPromise);\n          }).error(function (e) {\n            initPromise.setError();\n          });\n        } else if (initOptions) {\n          if (initOptions.token && initOptions.refreshToken) {\n            setToken(initOptions.token, initOptions.refreshToken, initOptions.idToken);\n\n            if (loginIframe.enable) {\n              setupCheckLoginIframe().success(function () {\n                checkLoginIframe().success(function (unchanged) {\n                  if (unchanged) {\n                    kc.onAuthSuccess && kc.onAuthSuccess();\n                    initPromise.setSuccess();\n                    scheduleCheckIframe();\n                  } else {\n                    initPromise.setSuccess();\n                  }\n                }).error(function () {\n                  initPromise.setError();\n                });\n              });\n            } else {\n              kc.updateToken(-1).success(function () {\n                kc.onAuthSuccess && kc.onAuthSuccess();\n                initPromise.setSuccess();\n              }).error(function () {\n                kc.onAuthError && kc.onAuthError();\n\n                if (initOptions.onLoad) {\n                  onLoad();\n                } else {\n                  initPromise.setError();\n                }\n              });\n            }\n          } else if (initOptions.onLoad) {\n            onLoad();\n          } else {\n            initPromise.setSuccess();\n          }\n        } else {\n          initPromise.setSuccess();\n        }\n      }\n\n      configPromise.success(processInit);\n      configPromise.error(function () {\n        promise.setError();\n      });\n      return promise.promise;\n    };\n\n    kc.login = function (options) {\n      return adapter.login(options);\n    };\n\n    kc.createLoginUrl = function (options) {\n      var state = createUUID();\n      var nonce = createUUID();\n      var redirectUri = adapter.redirectUri(options);\n      var callbackState = {\n        state: state,\n        nonce: nonce,\n        redirectUri: encodeURIComponent(redirectUri)\n      };\n\n      if (options && options.prompt) {\n        callbackState.prompt = options.prompt;\n      }\n\n      callbackStorage.add(callbackState);\n      var baseUrl;\n\n      if (options && options.action == 'register') {\n        baseUrl = kc.endpoints.register();\n      } else {\n        baseUrl = kc.endpoints.authorize();\n      }\n\n      var scope;\n\n      if (options && options.scope) {\n        if (options.scope.indexOf(\"openid\") != -1) {\n          scope = options.scope;\n        } else {\n          scope = \"openid \" + options.scope;\n        }\n      } else {\n        scope = \"openid\";\n      }\n\n      var url = baseUrl + '?client_id=' + encodeURIComponent(kc.clientId) + '&redirect_uri=' + encodeURIComponent(redirectUri) + '&state=' + encodeURIComponent(state) + '&response_mode=' + encodeURIComponent(kc.responseMode) + '&response_type=' + encodeURIComponent(kc.responseType) + '&scope=' + encodeURIComponent(scope);\n\n      if (useNonce) {\n        url = url + '&nonce=' + encodeURIComponent(nonce);\n      }\n\n      if (options && options.prompt) {\n        url += '&prompt=' + encodeURIComponent(options.prompt);\n      }\n\n      if (options && options.maxAge) {\n        url += '&max_age=' + encodeURIComponent(options.maxAge);\n      }\n\n      if (options && options.loginHint) {\n        url += '&login_hint=' + encodeURIComponent(options.loginHint);\n      }\n\n      if (options && options.idpHint) {\n        url += '&kc_idp_hint=' + encodeURIComponent(options.idpHint);\n      }\n\n      if (options && options.locale) {\n        url += '&ui_locales=' + encodeURIComponent(options.locale);\n      }\n\n      if (options && options.kcLocale) {\n        url += '&kc_locale=' + encodeURIComponent(options.kcLocale);\n      }\n\n      return url;\n    };\n\n    kc.logout = function (options) {\n      return adapter.logout(options);\n    };\n\n    kc.createLogoutUrl = function (options) {\n      var url = kc.endpoints.logout() + '?redirect_uri=' + encodeURIComponent(adapter.redirectUri(options, false));\n      return url;\n    };\n\n    kc.register = function (options) {\n      return adapter.register(options);\n    };\n\n    kc.createRegisterUrl = function (options) {\n      if (!options) {\n        options = {};\n      }\n\n      options.action = 'register';\n      return kc.createLoginUrl(options);\n    };\n\n    kc.createAccountUrl = function (options) {\n      var realm = getRealmUrl();\n      var url = undefined;\n\n      if (typeof realm !== 'undefined') {\n        url = realm + '/account' + '?referrer=' + encodeURIComponent(kc.clientId) + '&referrer_uri=' + encodeURIComponent(adapter.redirectUri(options));\n      }\n\n      return url;\n    };\n\n    kc.accountManagement = function () {\n      return adapter.accountManagement();\n    };\n\n    kc.hasRealmRole = function (role) {\n      var access = kc.realmAccess;\n      return !!access && access.roles.indexOf(role) >= 0;\n    };\n\n    kc.hasResourceRole = function (role, resource) {\n      if (!kc.resourceAccess) {\n        return false;\n      }\n\n      var access = kc.resourceAccess[resource || kc.clientId];\n      return !!access && access.roles.indexOf(role) >= 0;\n    };\n\n    kc.loadUserProfile = function () {\n      var url = getRealmUrl() + '/account';\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.setRequestHeader('Accept', 'application/json');\n      req.setRequestHeader('Authorization', 'bearer ' + kc.token);\n      var promise = createPromise(false);\n\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          if (req.status == 200) {\n            kc.profile = JSON.parse(req.responseText);\n            promise.setSuccess(kc.profile);\n          } else {\n            promise.setError();\n          }\n        }\n      };\n\n      req.send();\n      return promise.promise;\n    };\n\n    kc.loadUserInfo = function () {\n      var url = kc.endpoints.userinfo();\n      var req = new XMLHttpRequest();\n      req.open('GET', url, true);\n      req.setRequestHeader('Accept', 'application/json');\n      req.setRequestHeader('Authorization', 'bearer ' + kc.token);\n      var promise = createPromise(false);\n\n      req.onreadystatechange = function () {\n        if (req.readyState == 4) {\n          if (req.status == 200) {\n            kc.userInfo = JSON.parse(req.responseText);\n            promise.setSuccess(kc.userInfo);\n          } else {\n            promise.setError();\n          }\n        }\n      };\n\n      req.send();\n      return promise.promise;\n    };\n\n    kc.isTokenExpired = function (minValidity) {\n      if (!kc.tokenParsed || !kc.refreshToken && kc.flow != 'implicit') {\n        throw 'Not authenticated';\n      }\n\n      if (kc.timeSkew == null) {\n        console.info('[KEYCLOAK] Unable to determine if token is expired as timeskew is not set');\n        return true;\n      }\n\n      var expiresIn = kc.tokenParsed['exp'] - Math.ceil(new Date().getTime() / 1000) + kc.timeSkew;\n\n      if (minValidity) {\n        expiresIn -= minValidity;\n      }\n\n      return expiresIn < 0;\n    };\n\n    kc.updateToken = function (minValidity) {\n      var promise = createPromise(false);\n\n      if (!kc.refreshToken) {\n        promise.setError();\n        return promise.promise;\n      }\n\n      minValidity = minValidity || 5;\n\n      var exec = function exec() {\n        var refreshToken = false;\n\n        if (minValidity == -1) {\n          refreshToken = true;\n          console.info('[KEYCLOAK] Refreshing token: forced refresh');\n        } else if (!kc.tokenParsed || kc.isTokenExpired(minValidity)) {\n          refreshToken = true;\n          console.info('[KEYCLOAK] Refreshing token: token expired');\n        }\n\n        if (!refreshToken) {\n          promise.setSuccess(false);\n        } else {\n          var params = 'grant_type=refresh_token&' + 'refresh_token=' + kc.refreshToken;\n          var url = kc.endpoints.token();\n          refreshQueue.push(promise);\n\n          if (refreshQueue.length == 1) {\n            var req = new XMLHttpRequest();\n            req.open('POST', url, true);\n            req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n            req.withCredentials = true;\n\n            if (kc.clientId && kc.clientSecret) {\n              req.setRequestHeader('Authorization', 'Basic ' + btoa(kc.clientId + ':' + kc.clientSecret));\n            } else {\n              params += '&client_id=' + encodeURIComponent(kc.clientId);\n            }\n\n            var timeLocal = new Date().getTime();\n\n            req.onreadystatechange = function () {\n              if (req.readyState == 4) {\n                if (req.status == 200) {\n                  console.info('[KEYCLOAK] Token refreshed');\n                  timeLocal = (timeLocal + new Date().getTime()) / 2;\n                  var tokenResponse = JSON.parse(req.responseText);\n                  setToken(tokenResponse['access_token'], tokenResponse['refresh_token'], tokenResponse['id_token'], timeLocal);\n                  kc.onAuthRefreshSuccess && kc.onAuthRefreshSuccess();\n\n                  for (var p = refreshQueue.pop(); p != null; p = refreshQueue.pop()) {\n                    p.setSuccess(true);\n                  }\n                } else {\n                  console.warn('[KEYCLOAK] Failed to refresh token');\n\n                  if (req.status == 400) {\n                    kc.clearToken();\n                  }\n\n                  kc.onAuthRefreshError && kc.onAuthRefreshError();\n\n                  for (var p = refreshQueue.pop(); p != null; p = refreshQueue.pop()) {\n                    p.setError(true);\n                  }\n                }\n              }\n            };\n\n            req.send(params);\n          }\n        }\n      };\n\n      if (loginIframe.enable) {\n        var iframePromise = checkLoginIframe();\n        iframePromise.success(function () {\n          exec();\n        }).error(function () {\n          promise.setError();\n        });\n      } else {\n        exec();\n      }\n\n      return promise.promise;\n    };\n\n    kc.clearToken = function () {\n      if (kc.token) {\n        setToken(null, null, null);\n        kc.onAuthLogout && kc.onAuthLogout();\n\n        if (kc.loginRequired) {\n          kc.login();\n        }\n      }\n    };\n\n    function getRealmUrl() {\n      if (typeof kc.authServerUrl !== 'undefined') {\n        if (kc.authServerUrl.charAt(kc.authServerUrl.length - 1) == '/') {\n          return kc.authServerUrl + 'realms/' + encodeURIComponent(kc.realm);\n        } else {\n          return kc.authServerUrl + '/realms/' + encodeURIComponent(kc.realm);\n        }\n      } else {\n        return undefined;\n      }\n    }\n\n    function getOrigin() {\n      if (!window.location.origin) {\n        return window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port : '');\n      } else {\n        return window.location.origin;\n      }\n    }\n\n    function processCallback(oauth, promise) {\n      var code = oauth.code;\n      var error = oauth.error;\n      var prompt = oauth.prompt;\n      var timeLocal = new Date().getTime();\n\n      if (error) {\n        if (prompt != 'none') {\n          var errorData = {\n            error: error,\n            error_description: oauth.error_description\n          };\n          kc.onAuthError && kc.onAuthError(errorData);\n          promise && promise.setError(errorData);\n        } else {\n          promise && promise.setSuccess();\n        }\n\n        return;\n      } else if (kc.flow != 'standard' && (oauth.access_token || oauth.id_token)) {\n        authSuccess(oauth.access_token, null, oauth.id_token, true);\n      }\n\n      if (kc.flow != 'implicit' && code) {\n        var params = 'code=' + code + '&grant_type=authorization_code';\n        var url = kc.endpoints.token();\n        var req = new XMLHttpRequest();\n        req.open('POST', url, true);\n        req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');\n\n        if (kc.clientId && kc.clientSecret) {\n          req.setRequestHeader('Authorization', 'Basic ' + btoa(kc.clientId + ':' + kc.clientSecret));\n        } else {\n          params += '&client_id=' + encodeURIComponent(kc.clientId);\n        }\n\n        params += '&redirect_uri=' + oauth.redirectUri;\n        req.withCredentials = true;\n\n        req.onreadystatechange = function () {\n          if (req.readyState == 4) {\n            if (req.status == 200) {\n              var tokenResponse = JSON.parse(req.responseText);\n              authSuccess(tokenResponse['access_token'], tokenResponse['refresh_token'], tokenResponse['id_token'], kc.flow === 'standard');\n              scheduleCheckIframe();\n            } else {\n              kc.onAuthError && kc.onAuthError();\n              promise && promise.setError();\n            }\n          }\n        };\n\n        req.send(params);\n      }\n\n      function authSuccess(accessToken, refreshToken, idToken, fulfillPromise) {\n        timeLocal = (timeLocal + new Date().getTime()) / 2;\n        setToken(accessToken, refreshToken, idToken, timeLocal);\n\n        if (useNonce && (kc.tokenParsed && kc.tokenParsed.nonce != oauth.storedNonce || kc.refreshTokenParsed && kc.refreshTokenParsed.nonce != oauth.storedNonce || kc.idTokenParsed && kc.idTokenParsed.nonce != oauth.storedNonce)) {\n          console.info('[KEYCLOAK] Invalid nonce, clearing token');\n          kc.clearToken();\n          promise && promise.setError();\n        } else {\n          if (fulfillPromise) {\n            kc.onAuthSuccess && kc.onAuthSuccess();\n            promise && promise.setSuccess();\n          }\n        }\n      }\n    }\n\n    function loadConfig(url) {\n      var promise = createPromise(true);\n      var configUrl;\n\n      if (!config) {\n        configUrl = 'keycloak.json';\n      } else if (typeof config === 'string') {\n        configUrl = config;\n      }\n\n      function setupOidcEndoints(oidcConfiguration) {\n        if (!oidcConfiguration) {\n          kc.endpoints = {\n            authorize: function authorize() {\n              return getRealmUrl() + '/protocol/openid-connect/auth';\n            },\n            token: function token() {\n              return getRealmUrl() + '/protocol/openid-connect/token';\n            },\n            logout: function logout() {\n              return getRealmUrl() + '/protocol/openid-connect/logout';\n            },\n            checkSessionIframe: function checkSessionIframe() {\n              var src = getRealmUrl() + '/protocol/openid-connect/login-status-iframe.html';\n\n              if (kc.iframeVersion) {\n                src = src + '?version=' + kc.iframeVersion;\n              }\n\n              return src;\n            },\n            register: function register() {\n              return getRealmUrl() + '/protocol/openid-connect/registrations';\n            },\n            userinfo: function userinfo() {\n              return getRealmUrl() + '/protocol/openid-connect/userinfo';\n            }\n          };\n        } else {\n          kc.endpoints = {\n            authorize: function authorize() {\n              return oidcConfiguration.authorization_endpoint;\n            },\n            token: function token() {\n              return oidcConfiguration.token_endpoint;\n            },\n            logout: function logout() {\n              if (!oidcConfiguration.end_session_endpoint) {\n                throw \"Not supported by the OIDC server\";\n              }\n\n              return oidcConfiguration.end_session_endpoint;\n            },\n            checkSessionIframe: function checkSessionIframe() {\n              if (!oidcConfiguration.check_session_iframe) {\n                throw \"Not supported by the OIDC server\";\n              }\n\n              return oidcConfiguration.check_session_iframe;\n            },\n            register: function register() {\n              throw 'Redirection to \"Register user\" page not supported in standard OIDC mode';\n            },\n            userinfo: function userinfo() {\n              if (!oidcConfiguration.userinfo_endpoint) {\n                throw \"Not supported by the OIDC server\";\n              }\n\n              return oidcConfiguration.userinfo_endpoint;\n            }\n          };\n        }\n      }\n\n      if (configUrl) {\n        var req = new XMLHttpRequest();\n        req.open('GET', configUrl, true);\n        req.setRequestHeader('Accept', 'application/json');\n\n        req.onreadystatechange = function () {\n          if (req.readyState == 4) {\n            if (req.status == 200 || fileLoaded(req)) {\n              var config = JSON.parse(req.responseText);\n              kc.authServerUrl = config['auth-server-url'];\n              kc.realm = config['realm'];\n              kc.clientId = config['resource'];\n              kc.clientSecret = (config['credentials'] || {})['secret'];\n              setupOidcEndoints(null);\n              promise.setSuccess();\n            } else {\n              promise.setError();\n            }\n          }\n        };\n\n        req.send();\n      } else {\n        if (!config.clientId) {\n          throw 'clientId missing';\n        }\n\n        kc.clientId = config.clientId;\n        kc.clientSecret = (config.credentials || {}).secret;\n        var oidcProvider = config['oidcProvider'];\n\n        if (!oidcProvider) {\n          if (!config['url']) {\n            var scripts = document.getElementsByTagName('script');\n\n            for (var i = 0; i < scripts.length; i++) {\n              if (scripts[i].src.match(/.*keycloak\\.js/)) {\n                config.url = scripts[i].src.substr(0, scripts[i].src.indexOf('/js/keycloak.js'));\n                break;\n              }\n            }\n          }\n\n          if (!config.realm) {\n            throw 'realm missing';\n          }\n\n          kc.authServerUrl = config.url;\n          kc.realm = config.realm;\n          setupOidcEndoints(null);\n          promise.setSuccess();\n        } else {\n          if (typeof oidcProvider === 'string') {\n            var oidcProviderConfigUrl;\n\n            if (oidcProvider.charAt(oidcProvider.length - 1) == '/') {\n              oidcProviderConfigUrl = oidcProvider + '.well-known/openid-configuration';\n            } else {\n              oidcProviderConfigUrl = oidcProvider + '/.well-known/openid-configuration';\n            }\n\n            var req = new XMLHttpRequest();\n            req.open('GET', oidcProviderConfigUrl, true);\n            req.setRequestHeader('Accept', 'application/json');\n\n            req.onreadystatechange = function () {\n              if (req.readyState == 4) {\n                if (req.status == 200 || fileLoaded(req)) {\n                  var oidcProviderConfig = JSON.parse(req.responseText);\n                  setupOidcEndoints(oidcProviderConfig);\n                  promise.setSuccess();\n                } else {\n                  promise.setError();\n                }\n              }\n            };\n\n            req.send();\n          } else {\n            setupOidcEndoints(oidcProvider);\n            promise.setSuccess();\n          }\n        }\n      }\n\n      return promise.promise;\n    }\n\n    function fileLoaded(xhr) {\n      return xhr.status == 0 && xhr.responseText && xhr.responseURL.startsWith('file:');\n    }\n\n    function setToken(token, refreshToken, idToken, timeLocal) {\n      if (kc.tokenTimeoutHandle) {\n        clearTimeout(kc.tokenTimeoutHandle);\n        kc.tokenTimeoutHandle = null;\n      }\n\n      if (refreshToken) {\n        kc.refreshToken = refreshToken;\n        kc.refreshTokenParsed = decodeToken(refreshToken);\n      } else {\n        delete kc.refreshToken;\n        delete kc.refreshTokenParsed;\n      }\n\n      if (idToken) {\n        kc.idToken = idToken;\n        kc.idTokenParsed = decodeToken(idToken);\n      } else {\n        delete kc.idToken;\n        delete kc.idTokenParsed;\n      }\n\n      if (token) {\n        kc.token = token;\n        kc.tokenParsed = decodeToken(token);\n        kc.sessionId = kc.tokenParsed.session_state;\n        kc.authenticated = true;\n        kc.subject = kc.tokenParsed.sub;\n        kc.realmAccess = kc.tokenParsed.realm_access;\n        kc.resourceAccess = kc.tokenParsed.resource_access;\n\n        if (timeLocal) {\n          kc.timeSkew = Math.floor(timeLocal / 1000) - kc.tokenParsed.iat;\n        }\n\n        if (kc.timeSkew != null) {\n          console.info('[KEYCLOAK] Estimated time difference between browser and server is ' + kc.timeSkew + ' seconds');\n\n          if (kc.onTokenExpired) {\n            var expiresIn = (kc.tokenParsed['exp'] - new Date().getTime() / 1000 + kc.timeSkew) * 1000;\n            console.info('[KEYCLOAK] Token expires in ' + Math.round(expiresIn / 1000) + ' s');\n\n            if (expiresIn <= 0) {\n              kc.onTokenExpired();\n            } else {\n              kc.tokenTimeoutHandle = setTimeout(kc.onTokenExpired, expiresIn);\n            }\n          }\n        }\n      } else {\n        delete kc.token;\n        delete kc.tokenParsed;\n        delete kc.subject;\n        delete kc.realmAccess;\n        delete kc.resourceAccess;\n        kc.authenticated = false;\n      }\n    }\n\n    function decodeToken(str) {\n      str = str.split('.')[1];\n      str = str.replace('/-/g', '+');\n      str = str.replace('/_/g', '/');\n\n      switch (str.length % 4) {\n        case 0:\n          break;\n\n        case 2:\n          str += '==';\n          break;\n\n        case 3:\n          str += '=';\n          break;\n\n        default:\n          throw 'Invalid token';\n      }\n\n      str = (str + '===').slice(0, str.length + str.length % 4);\n      str = str.replace(/-/g, '+').replace(/_/g, '/');\n      str = decodeURIComponent(escape(atob(str)));\n      str = JSON.parse(str);\n      return str;\n    }\n\n    function createUUID() {\n      var s = [];\n      var hexDigits = '0123456789abcdef';\n\n      for (var i = 0; i < 36; i++) {\n        s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\n      }\n\n      s[14] = '4';\n      s[19] = hexDigits.substr(s[19] & 0x3 | 0x8, 1);\n      s[8] = s[13] = s[18] = s[23] = '-';\n      var uuid = s.join('');\n      return uuid;\n    }\n\n    kc.callback_id = 0;\n\n    function createCallbackId() {\n      var id = '<id: ' + kc.callback_id++ + Math.random() + '>';\n      return id;\n    }\n\n    function parseCallback(url) {\n      var oauth = parseCallbackUrl(url);\n\n      if (!oauth) {\n        return;\n      }\n\n      var oauthState = callbackStorage.get(oauth.state);\n\n      if (oauthState) {\n        oauth.valid = true;\n        oauth.redirectUri = oauthState.redirectUri;\n        oauth.storedNonce = oauthState.nonce;\n        oauth.prompt = oauthState.prompt;\n      }\n\n      return oauth;\n    }\n\n    function parseCallbackUrl(url) {\n      var supportedParams;\n\n      switch (kc.flow) {\n        case 'standard':\n          supportedParams = ['code', 'state', 'session_state'];\n          break;\n\n        case 'implicit':\n          supportedParams = ['access_token', 'token_type', 'id_token', 'state', 'session_state', 'expires_in'];\n          break;\n\n        case 'hybrid':\n          supportedParams = ['access_token', 'id_token', 'code', 'state', 'session_state'];\n          break;\n      }\n\n      supportedParams.push('error');\n      supportedParams.push('error_description');\n      supportedParams.push('error_uri');\n      var queryIndex = url.indexOf('?');\n      var fragmentIndex = url.indexOf('#');\n      var newUrl;\n      var parsed;\n\n      if (kc.responseMode === 'query' && queryIndex !== -1) {\n        newUrl = url.substring(0, queryIndex);\n        parsed = parseCallbackParams(url.substring(queryIndex + 1, fragmentIndex !== -1 ? fragmentIndex : url.length), supportedParams);\n\n        if (parsed.paramsString !== '') {\n          newUrl += '?' + parsed.paramsString;\n        }\n\n        if (fragmentIndex !== -1) {\n          newUrl += url.substring(fragmentIndex);\n        }\n      } else if (kc.responseMode === 'fragment' && fragmentIndex !== -1) {\n        newUrl = url.substring(0, fragmentIndex);\n        parsed = parseCallbackParams(url.substring(fragmentIndex + 1), supportedParams);\n\n        if (parsed.paramsString !== '') {\n          newUrl += '#' + parsed.paramsString;\n        }\n      }\n\n      if (parsed && parsed.oauthParams) {\n        if (kc.flow === 'standard' || kc.flow === 'hybrid') {\n          if ((parsed.oauthParams.code || parsed.oauthParams.error) && parsed.oauthParams.state) {\n            parsed.oauthParams.newUrl = newUrl;\n            return parsed.oauthParams;\n          }\n        } else if (kc.flow === 'implicit') {\n          if ((parsed.oauthParams.access_token || parsed.oauthParams.error) && parsed.oauthParams.state) {\n            parsed.oauthParams.newUrl = newUrl;\n            return parsed.oauthParams;\n          }\n        }\n      }\n    }\n\n    function parseCallbackParams(paramsString, supportedParams) {\n      var p = paramsString.split('&');\n      var result = {\n        paramsString: '',\n        oauthParams: {}\n      };\n\n      for (var i = 0; i < p.length; i++) {\n        var t = p[i].split('=');\n\n        if (supportedParams.indexOf(t[0]) !== -1) {\n          result.oauthParams[t[0]] = t[1];\n        } else {\n          if (result.paramsString !== '') {\n            result.paramsString += '&';\n          }\n\n          result.paramsString += p[i];\n        }\n      }\n\n      return result;\n    }\n\n    function createPromise(internal) {\n      if (!internal && kc.useNativePromise) {\n        return createNativePromise();\n      } else {\n        return createLegacyPromise();\n      }\n    }\n\n    function createNativePromise() {\n      // Need to create a native Promise which also preserves the\n      // interface of the custom promise type previously used by the API\n      var p = {\n        setSuccess: function setSuccess(result) {\n          p.resolve(result);\n        },\n        setError: function setError(result) {\n          p.reject(result);\n        }\n      };\n      p.promise = new Promise(function (resolve, reject) {\n        p.resolve = resolve;\n        p.reject = reject;\n      });\n      return p;\n    }\n\n    function createLegacyPromise() {\n      var p = {\n        setSuccess: function setSuccess(result) {\n          p.success = true;\n          p.result = result;\n\n          if (p.successCallback) {\n            p.successCallback(result);\n          }\n        },\n        setError: function setError(result) {\n          p.error = true;\n          p.result = result;\n\n          if (p.errorCallback) {\n            p.errorCallback(result);\n          }\n        },\n        promise: {\n          success: function success(callback) {\n            if (p.success) {\n              callback(p.result);\n            } else if (!p.error) {\n              p.successCallback = callback;\n            }\n\n            return p.promise;\n          },\n          error: function error(callback) {\n            if (p.error) {\n              callback(p.result);\n            } else if (!p.success) {\n              p.errorCallback = callback;\n            }\n\n            return p.promise;\n          }\n        }\n      };\n      return p;\n    }\n\n    function setupCheckLoginIframe() {\n      var promise = createPromise(true);\n\n      if (!loginIframe.enable) {\n        promise.setSuccess();\n        return promise.promise;\n      }\n\n      if (loginIframe.iframe) {\n        promise.setSuccess();\n        return promise.promise;\n      }\n\n      var iframe = document.createElement('iframe');\n      loginIframe.iframe = iframe;\n\n      iframe.onload = function () {\n        var authUrl = kc.endpoints.authorize();\n\n        if (authUrl.charAt(0) === '/') {\n          loginIframe.iframeOrigin = getOrigin();\n        } else {\n          loginIframe.iframeOrigin = authUrl.substring(0, authUrl.indexOf('/', 8));\n        }\n\n        promise.setSuccess();\n      };\n\n      var src = kc.endpoints.checkSessionIframe();\n      iframe.setAttribute('src', src);\n      iframe.setAttribute('title', 'keycloak-session-iframe');\n      iframe.style.display = 'none';\n      document.body.appendChild(iframe);\n\n      var messageCallback = function messageCallback(event) {\n        if (event.origin !== loginIframe.iframeOrigin || loginIframe.iframe.contentWindow !== event.source) {\n          return;\n        }\n\n        if (!(event.data == 'unchanged' || event.data == 'changed' || event.data == 'error')) {\n          return;\n        }\n\n        if (event.data != 'unchanged') {\n          kc.clearToken();\n        }\n\n        var callbacks = loginIframe.callbackList.splice(0, loginIframe.callbackList.length);\n\n        for (var i = callbacks.length - 1; i >= 0; --i) {\n          var promise = callbacks[i];\n\n          if (event.data == 'error') {\n            promise.setError();\n          } else {\n            promise.setSuccess(event.data == 'unchanged');\n          }\n        }\n      };\n\n      window.addEventListener('message', messageCallback, false);\n      return promise.promise;\n    }\n\n    function scheduleCheckIframe() {\n      if (loginIframe.enable) {\n        if (kc.token) {\n          setTimeout(function () {\n            checkLoginIframe().success(function (unchanged) {\n              if (unchanged) {\n                scheduleCheckIframe();\n              }\n            });\n          }, loginIframe.interval * 1000);\n        }\n      }\n    }\n\n    function checkLoginIframe() {\n      var promise = createPromise(true);\n\n      if (loginIframe.iframe && loginIframe.iframeOrigin) {\n        var msg = kc.clientId + ' ' + (kc.sessionId ? kc.sessionId : '');\n        loginIframe.callbackList.push(promise);\n        var origin = loginIframe.iframeOrigin;\n\n        if (loginIframe.callbackList.length == 1) {\n          loginIframe.iframe.contentWindow.postMessage(msg, origin);\n        }\n      } else {\n        promise.setSuccess();\n      }\n\n      return promise.promise;\n    }\n\n    function loadAdapter(type) {\n      if (!type || type == 'default') {\n        return {\n          login: function login(options) {\n            window.location.replace(kc.createLoginUrl(options));\n            return createPromise().promise;\n          },\n          logout: function logout(options) {\n            window.location.replace(kc.createLogoutUrl(options));\n            return createPromise().promise;\n          },\n          register: function register(options) {\n            window.location.replace(kc.createRegisterUrl(options));\n            return createPromise().promise;\n          },\n          accountManagement: function accountManagement() {\n            var accountUrl = kc.createAccountUrl();\n\n            if (typeof accountUrl !== 'undefined') {\n              window.location.href = accountUrl;\n            } else {\n              throw \"Not supported by the OIDC server\";\n            }\n\n            return createPromise(false).promise;\n          },\n          redirectUri: function redirectUri(options, encodeHash) {\n            if (arguments.length == 1) {\n              encodeHash = true;\n            }\n\n            if (options && options.redirectUri) {\n              return options.redirectUri;\n            } else if (kc.redirectUri) {\n              return kc.redirectUri;\n            } else {\n              return location.href;\n            }\n          }\n        };\n      }\n\n      if (type == 'cordova') {\n        loginIframe.enable = false;\n\n        var cordovaOpenWindowWrapper = function cordovaOpenWindowWrapper(loginUrl, target, options) {\n          if (window.cordova && window.cordova.InAppBrowser) {\n            // Use inappbrowser for IOS and Android if available\n            return window.cordova.InAppBrowser.open(loginUrl, target, options);\n          } else {\n            return window.open(loginUrl, target, options);\n          }\n        };\n\n        var shallowCloneCordovaOptions = function shallowCloneCordovaOptions(userOptions) {\n          if (userOptions && userOptions.cordovaOptions) {\n            return Object.keys(userOptions.cordovaOptions).reduce(function (options, optionName) {\n              options[optionName] = userOptions.cordovaOptions[optionName];\n              return options;\n            }, {});\n          } else {\n            return {};\n          }\n        };\n\n        var formatCordovaOptions = function formatCordovaOptions(cordovaOptions) {\n          return Object.keys(cordovaOptions).reduce(function (options, optionName) {\n            options.push(optionName + \"=\" + cordovaOptions[optionName]);\n            return options;\n          }, []).join(\",\");\n        };\n\n        var createCordovaOptions = function createCordovaOptions(userOptions) {\n          var cordovaOptions = shallowCloneCordovaOptions(userOptions);\n          cordovaOptions.location = 'no';\n\n          if (userOptions && userOptions.prompt == 'none') {\n            cordovaOptions.hidden = 'yes';\n          }\n\n          return formatCordovaOptions(cordovaOptions);\n        };\n\n        return {\n          login: function login(options) {\n            var promise = createPromise(false);\n            var cordovaOptions = createCordovaOptions(options);\n            var loginUrl = kc.createLoginUrl(options);\n            var ref = cordovaOpenWindowWrapper(loginUrl, '_blank', cordovaOptions);\n            var completed = false;\n            var closed = false;\n\n            var closeBrowser = function closeBrowser() {\n              closed = true;\n              ref.close();\n            };\n\n            ref.addEventListener('loadstart', function (event) {\n              if (event.url.indexOf('http://localhost') == 0) {\n                var callback = parseCallback(event.url);\n                processCallback(callback, promise);\n                closeBrowser();\n                completed = true;\n              }\n            });\n            ref.addEventListener('loaderror', function (event) {\n              if (!completed) {\n                if (event.url.indexOf('http://localhost') == 0) {\n                  var callback = parseCallback(event.url);\n                  processCallback(callback, promise);\n                  closeBrowser();\n                  completed = true;\n                } else {\n                  promise.setError();\n                  closeBrowser();\n                }\n              }\n            });\n            ref.addEventListener('exit', function (event) {\n              if (!closed) {\n                promise.setError({\n                  reason: \"closed_by_user\"\n                });\n              }\n            });\n            return promise.promise;\n          },\n          logout: function logout(options) {\n            var promise = createPromise(false);\n            var logoutUrl = kc.createLogoutUrl(options);\n            var ref = cordovaOpenWindowWrapper(logoutUrl, '_blank', 'location=no,hidden=yes');\n            var error;\n            ref.addEventListener('loadstart', function (event) {\n              if (event.url.indexOf('http://localhost') == 0) {\n                ref.close();\n              }\n            });\n            ref.addEventListener('loaderror', function (event) {\n              if (event.url.indexOf('http://localhost') == 0) {\n                ref.close();\n              } else {\n                error = true;\n                ref.close();\n              }\n            });\n            ref.addEventListener('exit', function (event) {\n              if (error) {\n                promise.setError();\n              } else {\n                kc.clearToken();\n                promise.setSuccess();\n              }\n            });\n            return promise.promise;\n          },\n          register: function register() {\n            var registerUrl = kc.createRegisterUrl();\n            var cordovaOptions = createCordovaOptions(options);\n            var ref = cordovaOpenWindowWrapper(registerUrl, '_blank', cordovaOptions);\n            ref.addEventListener('loadstart', function (event) {\n              if (event.url.indexOf('http://localhost') == 0) {\n                ref.close();\n              }\n            });\n          },\n          accountManagement: function accountManagement() {\n            var accountUrl = kc.createAccountUrl();\n\n            if (typeof accountUrl !== 'undefined') {\n              var ref = cordovaOpenWindowWrapper(accountUrl, '_blank', 'location=no');\n              ref.addEventListener('loadstart', function (event) {\n                if (event.url.indexOf('http://localhost') == 0) {\n                  ref.close();\n                }\n              });\n            } else {\n              throw \"Not supported by the OIDC server\";\n            }\n          },\n          redirectUri: function redirectUri(options) {\n            return 'http://localhost';\n          }\n        };\n      }\n\n      if (type == 'cordova-native') {\n        loginIframe.enable = false;\n        return {\n          login: function login(options) {\n            var promise = createPromise(false);\n            var loginUrl = kc.createLoginUrl(options);\n            universalLinks.subscribe('keycloak', function (event) {\n              universalLinks.unsubscribe('keycloak');\n              window.cordova.plugins.browsertab.close();\n              var oauth = parseCallback(event.url);\n              processCallback(oauth, promise);\n            });\n            window.cordova.plugins.browsertab.openUrl(loginUrl);\n            return promise.promise;\n          },\n          logout: function logout(options) {\n            var promise = createPromise(false);\n            var logoutUrl = kc.createLogoutUrl(options);\n            universalLinks.subscribe('keycloak', function (event) {\n              universalLinks.unsubscribe('keycloak');\n              window.cordova.plugins.browsertab.close();\n              kc.clearToken();\n              promise.setSuccess();\n            });\n            window.cordova.plugins.browsertab.openUrl(logoutUrl);\n            return promise.promise;\n          },\n          register: function register(options) {\n            var promise = createPromise(false);\n            var registerUrl = kc.createRegisterUrl(options);\n            universalLinks.subscribe('keycloak', function (event) {\n              universalLinks.unsubscribe('keycloak');\n              window.cordova.plugins.browsertab.close();\n              var oauth = parseCallback(event.url);\n              processCallback(oauth, promise);\n            });\n            window.cordova.plugins.browsertab.openUrl(registerUrl);\n            return promise.promise;\n          },\n          accountManagement: function accountManagement() {\n            var accountUrl = kc.createAccountUrl();\n\n            if (typeof accountUrl !== 'undefined') {\n              window.cordova.plugins.browsertab.openUrl(accountUrl);\n            } else {\n              throw \"Not supported by the OIDC server\";\n            }\n          },\n          redirectUri: function redirectUri(options) {\n            if (options && options.redirectUri) {\n              return options.redirectUri;\n            } else if (kc.redirectUri) {\n              return kc.redirectUri;\n            } else {\n              return \"http://localhost\";\n            }\n          }\n        };\n      }\n\n      throw 'invalid adapter type: ' + type;\n    }\n\n    var LocalStorage = function LocalStorage() {\n      if (!(this instanceof LocalStorage)) {\n        return new LocalStorage();\n      }\n\n      localStorage.setItem('kc-test', 'test');\n      localStorage.removeItem('kc-test');\n      var cs = this;\n\n      function clearExpired() {\n        var time = new Date().getTime();\n\n        for (var i = 0; i < localStorage.length; i++) {\n          var key = localStorage.key(i);\n\n          if (key && key.indexOf('kc-callback-') == 0) {\n            var value = localStorage.getItem(key);\n\n            if (value) {\n              try {\n                var expires = JSON.parse(value).expires;\n\n                if (!expires || expires < time) {\n                  localStorage.removeItem(key);\n                }\n              } catch (err) {\n                localStorage.removeItem(key);\n              }\n            }\n          }\n        }\n      }\n\n      cs.get = function (state) {\n        if (!state) {\n          return;\n        }\n\n        var key = 'kc-callback-' + state;\n        var value = localStorage.getItem(key);\n\n        if (value) {\n          localStorage.removeItem(key);\n          value = JSON.parse(value);\n        }\n\n        clearExpired();\n        return value;\n      };\n\n      cs.add = function (state) {\n        clearExpired();\n        var key = 'kc-callback-' + state.state;\n        state.expires = new Date().getTime() + 60 * 60 * 1000;\n        localStorage.setItem(key, JSON.stringify(state));\n      };\n    };\n\n    var CookieStorage = function CookieStorage() {\n      if (!(this instanceof CookieStorage)) {\n        return new CookieStorage();\n      }\n\n      var cs = this;\n\n      cs.get = function (state) {\n        if (!state) {\n          return;\n        }\n\n        var value = getCookie('kc-callback-' + state);\n        setCookie('kc-callback-' + state, '', cookieExpiration(-100));\n\n        if (value) {\n          return JSON.parse(value);\n        }\n      };\n\n      cs.add = function (state) {\n        setCookie('kc-callback-' + state.state, JSON.stringify(state), cookieExpiration(60));\n      };\n\n      cs.removeItem = function (key) {\n        setCookie(key, '', cookieExpiration(-100));\n      };\n\n      var cookieExpiration = function cookieExpiration(minutes) {\n        var exp = new Date();\n        exp.setTime(exp.getTime() + minutes * 60 * 1000);\n        return exp;\n      };\n\n      var getCookie = function getCookie(key) {\n        var name = key + '=';\n        var ca = document.cookie.split(';');\n\n        for (var i = 0; i < ca.length; i++) {\n          var c = ca[i];\n\n          while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n          }\n\n          if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n          }\n        }\n\n        return '';\n      };\n\n      var setCookie = function setCookie(key, value, expirationDate) {\n        var cookie = key + '=' + value + '; ' + 'expires=' + expirationDate.toUTCString() + '; ';\n        document.cookie = cookie;\n      };\n    };\n\n    function createCallbackStorage() {\n      try {\n        return new LocalStorage();\n      } catch (err) {}\n\n      return new CookieStorage();\n    }\n  };\n\n  if (typeof module === \"object\" && module && typeof module.exports === \"object\") {\n    module.exports = Keycloak;\n  } else {\n    window.Keycloak = Keycloak;\n\n    if (typeof define === \"function\" && define.amd) {\n      define(\"keycloak\", [], function () {\n        return Keycloak;\n      });\n    }\n  }\n})(window);"],"sourceRoot":""}